# Redirect to https
server {
       #listen      80;
       #listen      [::]:80;
      
       listen 443 ssl http2;
       listen [::]:443 ssl;
       ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
	   ssl_ciphers         EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;

       #server_name localhost;
       server_name  fitnes.loc;
	   root /var/www/app/public;
       ssl_certificate      /etc/nginx/ssl/fitnes.loc.pem;
       ssl_certificate_key  /etc/nginx/ssl/fitnes.loc-key.pem;
	   index index.php index.html index.htm;
	     location / {
        # try to serve file directly, fallback to index.php
        try_files $uri /index.php$is_args$args;
       }

	    location ~ ^/index\.php(/|$) {
        fastcgi_pass php-fpm:9000;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        include fastcgi_params;

        # optionally set the value of the environment variables used in the application
        # fastcgi_param APP_ENV prod;
        # fastcgi_param APP_SECRET <app-secret-id>;
        # fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

        # When you are using symlinks to link the document root to the
        # current version of your application, you should pass the real
        # application path instead of the path to the symlink to PHP
        # FPM.
        # Otherwise, PHP's OPcache may not properly detect changes to
        # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
        # for more information).
        # Caveat: When PHP-FPM is hosted on a different machine from nginx
        #         $realpath_root may not resolve as you expect! In this case try using
        #         $document_root instead.
        fastcgi_param SCRIPT_FILENAME $realpath_root/$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        # Prevents URIs that include the front controllers. This will 404:
        # http://domain.tld/index.php/some-path
        # Remove the internal directive to allow URIs like this
        internal;
    }
       # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
        return 404;
    }
}
server {
    #listen 80 default_server;
   #server_name fitnes.loc;
   # return 301 https://$host$request_uri;

    listen 8081;
    listen [::]:8081 ipv6only=on;
    server_name  127.0.0.1;
    return 301 https://$host$request_uri;
	#root /var/www/app/public;

    location / {
      proxy_pass http://mydomain.com;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }


}
